{"ast":null,"code":"// Based on https://github.com/vercel/next.js/blob/canary/examples/with-firebase-authentication/utils/auth/useUser.js\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFirebaseAuth } from '../firebase';\n\nconst useUser = () => {\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  const router = useRouter();\n\n  const logout = () => {\n    return getFirebaseAuth().signOut().then(() => {\n      // Sign-out successful.\n      console.log('Signed out successfully.');\n      router.push('/');\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  useEffect(() => {\n    // Firebase updates the id token every hour, this\n    // makes sure the react state and the cookie are\n    // both kept up to date\n    const cancelAuthListener = getFirebaseAuth().onIdTokenChanged(async user => {\n      if (user) {\n        // user still signed in\n        setUser(user);\n      } else {\n        // user is not signed in anymore\n        setUser(undefined);\n      }\n    });\n    return () => {\n      cancelAuthListener();\n    };\n  }, []);\n  return {\n    user,\n    logout\n  };\n};\n\nexport { useUser };","map":{"version":3,"sources":["/Users/danielelizondo/499/MainProject/COSC-499-Pace-A/src/lib/auth/useUser.ts"],"names":["useEffect","useState","useRouter","getFirebaseAuth","useUser","user","setUser","router","logout","signOut","then","console","log","push","catch","e","error","cancelAuthListener","onIdTokenChanged","undefined"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,eAAT,QAAgC,aAAhC;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,EAAhC;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;;AAEA,QAAMM,MAAM,GAAG,MAAM;AACnB,WAAOL,eAAe,GACnBM,OADI,GAEJC,IAFI,CAEC,MAAM;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,GAAZ;AACD,KANI,EAOJC,KAPI,CAOGC,CAAD,IAAO;AACZJ,MAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACD,KATI,CAAP;AAUD,GAXD;;AAaAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA,UAAMiB,kBAAkB,GAAGd,eAAe,GAAGe,gBAAlB,CAAmC,MAAOb,IAAP,IAAgB;AAC5E,UAAIA,IAAJ,EAAU;AACR;AACAC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHD,MAGO;AACL;AACAC,QAAAA,OAAO,CAACa,SAAD,CAAP;AACD;AACF,KAR0B,CAA3B;AAUA,WAAO,MAAM;AACXF,MAAAA,kBAAkB;AACnB,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAEZ,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAP;AACD,CArCD;;AAuCA,SAASJ,OAAT","sourcesContent":["// Based on https://github.com/vercel/next.js/blob/canary/examples/with-firebase-authentication/utils/auth/useUser.js\r\nimport { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport firebase from 'firebase/app'\r\nimport { getFirebaseAuth } from '../firebase'\r\nimport { FirebaseAuth } from 'react-firebaseui'\r\n\r\nconst useUser = () => {\r\n  const [user, setUser] = useState<firebase.User>()\r\n  const router = useRouter()\r\n\r\n  const logout = () => {\r\n    return getFirebaseAuth()\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n        console.log('Signed out successfully.')\r\n        router.push('/')\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Firebase updates the id token every hour, this\r\n    // makes sure the react state and the cookie are\r\n    // both kept up to date\r\n    const cancelAuthListener = getFirebaseAuth().onIdTokenChanged(async (user) => {\r\n      if (user) {\r\n        // user still signed in\r\n        setUser(user)\r\n      } else {\r\n        // user is not signed in anymore\r\n        setUser(undefined)\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      cancelAuthListener()\r\n    }\r\n  }, [])\r\n\r\n  return { user, logout }\r\n}\r\n\r\nexport { useUser }\r\n"]},"metadata":{},"sourceType":"module"}