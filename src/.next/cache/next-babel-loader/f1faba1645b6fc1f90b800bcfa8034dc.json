{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\n// Based on https://github.com/vercel/next.js/blob/canary/examples/with-firebase-authentication/utils/auth/useUser.js\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { getFirebaseAuth } from '../firebase';\n\nvar useUser = function useUser() {\n  _s();\n\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var router = useRouter();\n\n  var logout = function logout() {\n    return getFirebaseAuth().signOut().then(function () {\n      // Sign-out successful.\n      console.log('Signed out successfully.');\n      router.push('/app/login');\n    })[\"catch\"](function (e) {\n      console.error(e);\n    });\n  };\n\n  useEffect(function () {\n    // Firebase updates the id token every hour, this\n    // makes sure the react state and the cookie are\n    // both kept up to date\n    var cancelAuthListener = getFirebaseAuth().onIdTokenChanged( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (user) {\n                  // user still signed in\n                  setUser(user);\n                } else {\n                  // user is not signed in anymore\n                  setUser(undefined);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    return function () {\n      cancelAuthListener();\n    };\n  }, []);\n  return {\n    user: user,\n    logout: logout\n  };\n};\n\n_s(useUser, \"vM+0cQpbmcqvR1155uZ1Pw51794=\", false, function () {\n  return [useRouter];\n});\n\nexport { useUser };","map":{"version":3,"sources":["/Users/danielelizondo/499/MainProject/COSC-499-Pace-A/src/lib/auth/useUser.ts"],"names":["useEffect","useState","useRouter","getFirebaseAuth","useUser","user","setUser","router","logout","signOut","then","console","log","push","e","error","cancelAuthListener","onIdTokenChanged","undefined"],"mappings":";;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,eAAT,QAAgC,aAAhC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBACIH,QAAQ,EADZ;AAAA,MACbI,IADa;AAAA,MACPC,OADO;;AAEpB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AAEA,MAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,WAAOL,eAAe,GACnBM,OADI,GAEJC,IAFI,CAEC,YAAM;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ;AACD,KANI,WAOE,UAACC,CAAD,EAAO;AACZH,MAAAA,OAAO,CAACI,KAAR,CAAcD,CAAd;AACD,KATI,CAAP;AAUD,GAXD;;AAaAd,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA,QAAMgB,kBAAkB,GAAGb,eAAe,GAAGc,gBAAlB;AAAA,0EAAmC,iBAAOZ,IAAP;AAAA;AAAA;AAAA;AAAA;AAC5D,oBAAIA,IAAJ,EAAU;AACR;AACAC,kBAAAA,OAAO,CAACD,IAAD,CAAP;AACD,iBAHD,MAGO;AACL;AACAC,kBAAAA,OAAO,CAACY,SAAD,CAAP;AACD;;AAP2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnC;;AAAA;AAAA;AAAA;AAAA,QAA3B;AAUA,WAAO,YAAM;AACXF,MAAAA,kBAAkB;AACnB,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SAAO;AAAEX,IAAAA,IAAI,EAAJA,IAAF;AAAQG,IAAAA,MAAM,EAANA;AAAR,GAAP;AACD,CArCD;;GAAMJ,O;UAEWF,S;;;AAqCjB,SAASE,OAAT","sourcesContent":["// Based on https://github.com/vercel/next.js/blob/canary/examples/with-firebase-authentication/utils/auth/useUser.js\r\nimport { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport firebase from 'firebase/app'\r\nimport { getFirebaseAuth } from '../firebase'\r\n\r\nconst useUser = () => {\r\n  const [user, setUser] = useState<firebase.User>()\r\n  const router = useRouter()\r\n\r\n  const logout = () => {\r\n    return getFirebaseAuth()\r\n      .signOut()\r\n      .then(() => {\r\n        // Sign-out successful.\r\n        console.log('Signed out successfully.')\r\n        router.push('/app/login')\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Firebase updates the id token every hour, this\r\n    // makes sure the react state and the cookie are\r\n    // both kept up to date\r\n    const cancelAuthListener = getFirebaseAuth().onIdTokenChanged(async (user) => {\r\n      if (user) {\r\n        // user still signed in\r\n        setUser(user)\r\n      } else {\r\n        // user is not signed in anymore\r\n        setUser(undefined)\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      cancelAuthListener()\r\n    }\r\n  }, [])\r\n\r\n  return { user, logout }\r\n}\r\n\r\nexport { useUser }\r\n"]},"metadata":{},"sourceType":"module"}