{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/danielelizondo/499/MainProject/COSC-499-Pace-A/src/components/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport UserTypeField from './UserTypeField';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { getFirebaseAuth } from '../lib/firebase';\n\nvar SignUp = function SignUp() {\n  _s();\n\n  var _useState = useState(''),\n      firstName = _useState[0],\n      setFirstName = _useState[1];\n\n  var _useState2 = useState(''),\n      lastName = _useState2[0],\n      setLastName = _useState2[1];\n\n  var _useState3 = useState(''),\n      displayName = _useState3[0],\n      setDisplayName = _useState3[1];\n\n  var _useState4 = useState(''),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      password = _useState5[0],\n      setPassword = _useState5[1];\n\n  var _useState6 = useState(''),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      userType = _useState7[0],\n      setUserType = _useState7[1];\n\n  var _useState8 = useState(''),\n      userTypeFieldValue = _useState8[0],\n      setUserTypeFieldValue = _useState8[1];\n\n  var _useState9 = useState(false),\n      verificationSent = _useState9[0],\n      setVerificationSent = _useState9[1];\n\n  var _useState10 = useState(null),\n      error = _useState10[0],\n      setError = _useState10[1];\n\n  var userTypes = [{\n    value: 'Mentee',\n    label: 'Mentee'\n  }, {\n    value: 'Mentor',\n    label: 'Mentor'\n  }, {\n    value: 'Admin',\n    label: 'Admin'\n  }];\n  var router = useRouter();\n  var auth = getFirebaseAuth();\n\n  var createUser = function createUser() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (user) {\n      // Signed in\n      auth.currentUser.sendEmailVerification().then(function () {\n        setVerificationSent(true);\n      }); // TODO: add new user to database\n    })[\"catch\"](function (e) {\n      setError(e.message);\n    });\n  };\n\n  var handleChange = function handleChange(event) {\n    var id = event.target.id;\n    var value = event.target.value;\n\n    if (id === 'first-name') {\n      setFirstName(value);\n    } else if (id === 'last-name') {\n      setLastName(value);\n    } else if (id === 'display-name') {\n      setDisplayName(value);\n    } else if (id === 'email') {\n      setEmail(value);\n    } else if (id === 'password') {\n      setPassword(value);\n    } else if (id === 'confirm-password') {\n      setConfirmPassword(value);\n    } else if (id === 'user-type-field') {\n      setUserTypeFieldValue(value);\n    }\n  };\n\n  var handleUserTypeChange = function handleUserTypeChange(event) {\n    setUserType(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, verificationSent ? 'Email verification sent.' : __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, error !== null && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 32\n    }\n  }, error), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    direction: \"column\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    id: \"first-name\",\n    label: \"First Name\",\n    value: firstName,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    required: true,\n    id: \"last-name\",\n    label: \"Last Name\",\n    value: lastName,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    id: \"display-name\",\n    label: \"Display Name\",\n    value: displayName,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    id: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    id: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: handleChange,\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    id: \"confirm-password\",\n    label: \"Confirm Password\",\n    value: confirmPassword,\n    onChange: handleChange,\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    required: true,\n    select: true,\n    id: \"user-type\",\n    label: \"User Type\",\n    value: userType,\n    onChange: handleUserTypeChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, userTypes.map(function (option) {\n    return __jsx(MenuItem, {\n      id: \"user-type-menu\",\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, option.label);\n  }))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(UserTypeField, {\n    id: \"user-type-field\",\n    userType: userType,\n    value: userTypeFieldValue,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }))), __jsx(Button, {\n    variant: \"contained\",\n    onClick: createUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))));\n};\n\n_s(SignUp, \"2xdRIwFjWKavilSJJIMbXtHhmtY=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/danielelizondo/499/MainProject/COSC-499-Pace-A/src/components/SignUp.tsx"],"names":["useState","useRouter","UserTypeField","Grid","TextField","Button","MenuItem","getFirebaseAuth","SignUp","firstName","setFirstName","lastName","setLastName","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userType","setUserType","userTypeFieldValue","setUserTypeFieldValue","verificationSent","setVerificationSent","error","setError","userTypes","value","label","router","auth","createUser","createUserWithEmailAndPassword","then","user","currentUser","sendEmailVerification","e","message","handleChange","event","id","target","handleUserTypeChange","map","option"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport UserTypeField from './UserTypeField'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { getFirebaseAuth } from '../lib/firebase'\n\nconst SignUp = () => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [displayName, setDisplayName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [userType, setUserType] = useState('')\n  const [userTypeFieldValue, setUserTypeFieldValue] = useState('')\n  const [verificationSent, setVerificationSent] = useState(false)\n  const [error, setError] = useState(null)\n  const userTypes = [\n    { value: 'Mentee', label: 'Mentee' },\n    { value: 'Mentor', label: 'Mentor' },\n    { value: 'Admin', label: 'Admin' },\n  ]\n  const router = useRouter()\n  const auth = getFirebaseAuth()\n  const createUser = () => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((user) => {\n        // Signed in\n        auth.currentUser.sendEmailVerification().then(() => {\n          setVerificationSent(true)\n        })\n        // TODO: add new user to database\n      })\n      .catch((e) => {\n        setError(e.message)\n      })\n  }\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const id = event.target.id\n    const value = event.target.value\n    if (id === 'first-name') {\n      setFirstName(value)\n    } else if (id === 'last-name') {\n      setLastName(value)\n    } else if (id === 'display-name') {\n      setDisplayName(value)\n    } else if (id === 'email') {\n      setEmail(value)\n    } else if (id === 'password') {\n      setPassword(value)\n    } else if (id === 'confirm-password') {\n      setConfirmPassword(value)\n    } else if (id === 'user-type-field') {\n      setUserTypeFieldValue(value)\n    }\n  }\n  const handleUserTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUserType(event.target.value)\n  }\n  return (\n    <div>\n      {verificationSent ? (\n        'Email verification sent.'\n      ) : (\n        <>\n          <h1>Sign Up</h1>\n          <div>\n            {error !== null && <div>{error}</div>}\n            <Grid container spacing={1} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\n              <Grid item>\n                <TextField required id=\"first-name\" label=\"First Name\" value={firstName} onChange={handleChange} />\n                <TextField required id=\"last-name\" label=\"Last Name\" value={lastName} onChange={handleChange} />\n              </Grid>\n              <Grid item>\n                <TextField id=\"display-name\" label=\"Display Name\" value={displayName} onChange={handleChange} />\n              </Grid>\n              <Grid item>\n                <TextField required id=\"email\" label=\"Email\" value={email} onChange={handleChange} />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  id=\"password\"\n                  label=\"Password\"\n                  value={password}\n                  onChange={handleChange}\n                  type=\"password\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  id=\"confirm-password\"\n                  label=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={handleChange}\n                  type=\"password\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  required\n                  select\n                  id=\"user-type\"\n                  label=\"User Type\"\n                  value={userType}\n                  onChange={handleUserTypeChange}\n                >\n                  {userTypes.map((option) => (\n                    <MenuItem id=\"user-type-menu\" key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item>\n                <UserTypeField\n                  id=\"user-type-field\"\n                  userType={userType}\n                  value={userTypeFieldValue}\n                  onChange={handleChange}\n                />\n              </Grid>\n            </Grid>\n            <Button variant=\"contained\" onClick={createUser}>\n              Sign Up\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}